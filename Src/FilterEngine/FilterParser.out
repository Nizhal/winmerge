State 0:
          filter_expr ::= * or_expr
          or_expr ::= * or_expr OR and_expr
          or_expr ::= * and_expr
          and_expr ::= * and_expr AND not_expr
          and_expr ::= * not_expr
          not_expr ::= * NOT not_expr
          not_expr ::= * cmp_expr
          cmp_expr ::= * arithmetic EQ arithmetic
          cmp_expr ::= * arithmetic NE arithmetic
          cmp_expr ::= * arithmetic LT arithmetic
          cmp_expr ::= * arithmetic LE arithmetic
          cmp_expr ::= * arithmetic GT arithmetic
          cmp_expr ::= * arithmetic GE arithmetic
          cmp_expr ::= * arithmetic CONTAINS arithmetic
          cmp_expr ::= * arithmetic MATCHES arithmetic
          cmp_expr ::= * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                           NOT shift        5      
                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                   filter_expr accept
                       or_expr shift        33     
                      and_expr shift        35     
                      not_expr shift        35       /* because not_expr==and_expr */
                      cmp_expr shift        35       /* because cmp_expr==not_expr */
                    arithmetic shift        21     
                         unary shift        21       /* because unary==arithmetic */
                          term shift        21       /* because term==unary */

State 1:
          or_expr ::= * or_expr OR and_expr
          or_expr ::= * and_expr
          and_expr ::= * and_expr AND not_expr
          and_expr ::= * not_expr
          not_expr ::= * NOT not_expr
          not_expr ::= * cmp_expr
          cmp_expr ::= * arithmetic EQ arithmetic
          cmp_expr ::= * arithmetic NE arithmetic
          cmp_expr ::= * arithmetic LT arithmetic
          cmp_expr ::= * arithmetic LE arithmetic
          cmp_expr ::= * arithmetic GT arithmetic
          cmp_expr ::= * arithmetic GE arithmetic
          cmp_expr ::= * arithmetic CONTAINS arithmetic
          cmp_expr ::= * arithmetic MATCHES arithmetic
          cmp_expr ::= * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          expr ::= * or_expr
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= IDENTIFIER LPAREN * RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= IDENTIFIER LPAREN * expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN
          expr_list ::= * expr
          expr_list ::= * expr_list COMMA expr

                           NOT shift        5      
                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                        RPAREN shift-reduce 22     term ::= IDENTIFIER LPAREN RPAREN
                         MINUS shift        20     
                       or_expr shift        36     
                      and_expr shift        35     
                      not_expr shift        35       /* because not_expr==and_expr */
                      cmp_expr shift        35       /* because cmp_expr==not_expr */
                    arithmetic shift        21     
                         unary shift        21       /* because unary==arithmetic */
                          expr shift-reduce 26     expr_list ::= expr
                          term shift        21       /* because term==unary */
                     expr_list shift        32     

State 2:
          or_expr ::= * or_expr OR and_expr
          or_expr ::= * and_expr
          and_expr ::= * and_expr AND not_expr
          and_expr ::= * not_expr
          not_expr ::= * NOT not_expr
          not_expr ::= * cmp_expr
          cmp_expr ::= * arithmetic EQ arithmetic
          cmp_expr ::= * arithmetic NE arithmetic
          cmp_expr ::= * arithmetic LT arithmetic
          cmp_expr ::= * arithmetic LE arithmetic
          cmp_expr ::= * arithmetic GT arithmetic
          cmp_expr ::= * arithmetic GE arithmetic
          cmp_expr ::= * arithmetic CONTAINS arithmetic
          cmp_expr ::= * arithmetic MATCHES arithmetic
          cmp_expr ::= * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          expr ::= * or_expr
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN
          term ::= LPAREN * expr RPAREN

                           NOT shift        5      
                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                       or_expr shift        36     
                      and_expr shift        35     
                      not_expr shift        35       /* because not_expr==and_expr */
                      cmp_expr shift        35       /* because cmp_expr==not_expr */
                    arithmetic shift        21     
                         unary shift        21       /* because unary==arithmetic */
                          expr shift        34     
                          term shift        21       /* because term==unary */

State 3:
          or_expr ::= * or_expr OR and_expr
          or_expr ::= * and_expr
          and_expr ::= * and_expr AND not_expr
          and_expr ::= * not_expr
          not_expr ::= * NOT not_expr
          not_expr ::= * cmp_expr
          cmp_expr ::= * arithmetic EQ arithmetic
          cmp_expr ::= * arithmetic NE arithmetic
          cmp_expr ::= * arithmetic LT arithmetic
          cmp_expr ::= * arithmetic LE arithmetic
          cmp_expr ::= * arithmetic GT arithmetic
          cmp_expr ::= * arithmetic GE arithmetic
          cmp_expr ::= * arithmetic CONTAINS arithmetic
          cmp_expr ::= * arithmetic MATCHES arithmetic
          cmp_expr ::= * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          expr ::= * or_expr
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN
          expr_list ::= expr_list COMMA * expr

                           NOT shift        5      
                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                       or_expr shift        36     
                      and_expr shift        35     
                      not_expr shift        35       /* because not_expr==and_expr */
                      cmp_expr shift        35       /* because cmp_expr==not_expr */
                    arithmetic shift        21     
                         unary shift        21       /* because unary==arithmetic */
                          expr shift-reduce 27     expr_list ::= expr_list COMMA expr
                          term shift        21       /* because term==unary */

State 4:
          or_expr ::= or_expr OR * and_expr
          and_expr ::= * and_expr AND not_expr
          and_expr ::= * not_expr
          not_expr ::= * NOT not_expr
          not_expr ::= * cmp_expr
          cmp_expr ::= * arithmetic EQ arithmetic
          cmp_expr ::= * arithmetic NE arithmetic
          cmp_expr ::= * arithmetic LT arithmetic
          cmp_expr ::= * arithmetic LE arithmetic
          cmp_expr ::= * arithmetic GT arithmetic
          cmp_expr ::= * arithmetic GE arithmetic
          cmp_expr ::= * arithmetic CONTAINS arithmetic
          cmp_expr ::= * arithmetic MATCHES arithmetic
          cmp_expr ::= * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                           NOT shift        5      
                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                      and_expr shift        38     
                      not_expr shift        38       /* because not_expr==and_expr */
                      cmp_expr shift        38       /* because cmp_expr==not_expr */
                    arithmetic shift        21     
                         unary shift        21       /* because unary==arithmetic */
                          term shift        21       /* because term==unary */

State 5:
          not_expr ::= * NOT not_expr
          not_expr ::= NOT * not_expr
          not_expr ::= * cmp_expr
          cmp_expr ::= * arithmetic EQ arithmetic
          cmp_expr ::= * arithmetic NE arithmetic
          cmp_expr ::= * arithmetic LT arithmetic
          cmp_expr ::= * arithmetic LE arithmetic
          cmp_expr ::= * arithmetic GT arithmetic
          cmp_expr ::= * arithmetic GE arithmetic
          cmp_expr ::= * arithmetic CONTAINS arithmetic
          cmp_expr ::= * arithmetic MATCHES arithmetic
          cmp_expr ::= * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                           NOT shift        5      
                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                      not_expr shift-reduce 3      not_expr ::= NOT not_expr
                      cmp_expr shift-reduce 3      not_expr ::= NOT not_expr  /* because cmp_expr==not_expr */
                    arithmetic shift        21     
                         unary shift        21       /* because unary==arithmetic */
                          term shift        21       /* because term==unary */

State 6:
          and_expr ::= and_expr AND * not_expr
          not_expr ::= * NOT not_expr
          not_expr ::= * cmp_expr
          cmp_expr ::= * arithmetic EQ arithmetic
          cmp_expr ::= * arithmetic NE arithmetic
          cmp_expr ::= * arithmetic LT arithmetic
          cmp_expr ::= * arithmetic LE arithmetic
          cmp_expr ::= * arithmetic GT arithmetic
          cmp_expr ::= * arithmetic GE arithmetic
          cmp_expr ::= * arithmetic CONTAINS arithmetic
          cmp_expr ::= * arithmetic MATCHES arithmetic
          cmp_expr ::= * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                           NOT shift        5      
                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                      not_expr shift-reduce 2      and_expr ::= and_expr AND not_expr
                      cmp_expr shift-reduce 2      and_expr ::= and_expr AND not_expr  /* because cmp_expr==not_expr */
                    arithmetic shift        21     
                         unary shift        21       /* because unary==arithmetic */
                          term shift        21       /* because term==unary */

State 7:
          cmp_expr ::= arithmetic MATCHES * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        22     
                         unary shift        22       /* because unary==arithmetic */
                          term shift        22       /* because term==unary */

State 8:
          cmp_expr ::= arithmetic CONTAINS * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        23     
                         unary shift        23       /* because unary==arithmetic */
                          term shift        23       /* because term==unary */

State 9:
          cmp_expr ::= arithmetic GE * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        24     
                         unary shift        24       /* because unary==arithmetic */
                          term shift        24       /* because term==unary */

State 10:
          cmp_expr ::= arithmetic GT * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        25     
                         unary shift        25       /* because unary==arithmetic */
                          term shift        25       /* because term==unary */

State 11:
          cmp_expr ::= arithmetic LE * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        26     
                         unary shift        26       /* because unary==arithmetic */
                          term shift        26       /* because term==unary */

State 12:
          cmp_expr ::= arithmetic LT * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        27     
                         unary shift        27       /* because unary==arithmetic */
                          term shift        27       /* because term==unary */

State 13:
          cmp_expr ::= arithmetic NE * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        28     
                         unary shift        28       /* because unary==arithmetic */
                          term shift        28       /* because term==unary */

State 14:
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= arithmetic MOD * arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift-reduce 16     arithmetic ::= arithmetic MOD arithmetic
                         unary shift-reduce 16     arithmetic ::= arithmetic MOD arithmetic  /* because unary==arithmetic */
                          term shift-reduce 16     arithmetic ::= arithmetic MOD arithmetic  /* because term==unary */

State 15:
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= arithmetic SLASH * arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift-reduce 15     arithmetic ::= arithmetic SLASH arithmetic
                         unary shift-reduce 15     arithmetic ::= arithmetic SLASH arithmetic  /* because unary==arithmetic */
                          term shift-reduce 15     arithmetic ::= arithmetic SLASH arithmetic  /* because term==unary */

State 16:
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= arithmetic STAR * arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift-reduce 14     arithmetic ::= arithmetic STAR arithmetic
                         unary shift-reduce 14     arithmetic ::= arithmetic STAR arithmetic  /* because unary==arithmetic */
                          term shift-reduce 14     arithmetic ::= arithmetic STAR arithmetic  /* because term==unary */

State 17:
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= arithmetic MINUS * arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        30     
                         unary shift        30       /* because unary==arithmetic */
                          term shift        30       /* because term==unary */

State 18:
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= arithmetic PLUS * arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        31     
                         unary shift        31       /* because unary==arithmetic */
                          term shift        31       /* because term==unary */

State 19:
          cmp_expr ::= arithmetic EQ * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * arithmetic STAR arithmetic
          arithmetic ::= * arithmetic SLASH arithmetic
          arithmetic ::= * arithmetic MOD arithmetic
          arithmetic ::= * unary
          unary ::= * MINUS unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                    arithmetic shift        29     
                         unary shift        29       /* because unary==arithmetic */
                          term shift        29       /* because term==unary */

State 20:
          unary ::= * MINUS unary
          unary ::= MINUS * unary
          unary ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * IDENTIFIER LPAREN RPAREN
          term ::= * IDENTIFIER LPAREN expr_list RPAREN
          term ::= * IDENTIFIER
          term ::= * LPAREN expr RPAREN

                  TRUE_LITERAL shift-reduce 18     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 19     term ::= FALSE_LITERAL
                    IDENTIFIER shift        37     
               INTEGER_LITERAL shift-reduce 20     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 21     term ::= STRING_LITERAL
                        LPAREN shift        2      
                         MINUS shift        20     
                         unary shift-reduce 17     unary ::= MINUS unary
                          term shift-reduce 17     unary ::= MINUS unary  /* because term==unary */

State 21:
          cmp_expr ::= arithmetic * EQ arithmetic
          cmp_expr ::= arithmetic * NE arithmetic
          cmp_expr ::= arithmetic * LT arithmetic
          cmp_expr ::= arithmetic * LE arithmetic
          cmp_expr ::= arithmetic * GT arithmetic
          cmp_expr ::= arithmetic * GE arithmetic
          cmp_expr ::= arithmetic * CONTAINS arithmetic
          cmp_expr ::= arithmetic * MATCHES arithmetic
     (31) cmp_expr ::= arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                            EQ shift        19     
                            NE shift        13     
                            LT shift        12     
                            LE shift        11     
                            GT shift        10     
                            GE shift        9      
                      CONTAINS shift        8      
                       MATCHES shift        7      
                          PLUS shift        18     
                         MINUS shift        17     
                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       31     cmp_expr ::= arithmetic

State 22:
     (11) cmp_expr ::= arithmetic MATCHES arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          PLUS shift        18     
                         MINUS shift        17     
                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       11     cmp_expr ::= arithmetic MATCHES arithmetic

State 23:
     (10) cmp_expr ::= arithmetic CONTAINS arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          PLUS shift        18     
                         MINUS shift        17     
                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       10     cmp_expr ::= arithmetic CONTAINS arithmetic

State 24:
      (9) cmp_expr ::= arithmetic GE arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          PLUS shift        18     
                         MINUS shift        17     
                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       9      cmp_expr ::= arithmetic GE arithmetic

State 25:
      (8) cmp_expr ::= arithmetic GT arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          PLUS shift        18     
                         MINUS shift        17     
                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       8      cmp_expr ::= arithmetic GT arithmetic

State 26:
      (7) cmp_expr ::= arithmetic LE arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          PLUS shift        18     
                         MINUS shift        17     
                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       7      cmp_expr ::= arithmetic LE arithmetic

State 27:
      (6) cmp_expr ::= arithmetic LT arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          PLUS shift        18     
                         MINUS shift        17     
                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       6      cmp_expr ::= arithmetic LT arithmetic

State 28:
      (5) cmp_expr ::= arithmetic NE arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          PLUS shift        18     
                         MINUS shift        17     
                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       5      cmp_expr ::= arithmetic NE arithmetic

State 29:
      (4) cmp_expr ::= arithmetic EQ arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          PLUS shift        18     
                         MINUS shift        17     
                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       4      cmp_expr ::= arithmetic EQ arithmetic

State 30:
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
     (13) arithmetic ::= arithmetic MINUS arithmetic *
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       13     arithmetic ::= arithmetic MINUS arithmetic

State 31:
          arithmetic ::= arithmetic * PLUS arithmetic
     (12) arithmetic ::= arithmetic PLUS arithmetic *
          arithmetic ::= arithmetic * MINUS arithmetic
          arithmetic ::= arithmetic * STAR arithmetic
          arithmetic ::= arithmetic * SLASH arithmetic
          arithmetic ::= arithmetic * MOD arithmetic

                          STAR shift        16     
                         SLASH shift        15     
                           MOD shift        14     
                     {default} reduce       12     arithmetic ::= arithmetic PLUS arithmetic

State 32:
          term ::= IDENTIFIER LPAREN expr_list * RPAREN
          expr_list ::= expr_list * COMMA expr

                        RPAREN shift-reduce 23     term ::= IDENTIFIER LPAREN expr_list RPAREN
                         COMMA shift        3      

State 33:
      (0) filter_expr ::= or_expr *
          or_expr ::= or_expr * OR and_expr

                             $ reduce       0      filter_expr ::= or_expr
                            OR shift        4      

State 34:
          term ::= LPAREN expr * RPAREN

                        RPAREN shift-reduce 25     term ::= LPAREN expr RPAREN

State 35:
     (28) or_expr ::= and_expr *
          and_expr ::= and_expr * AND not_expr

                           AND shift        6      
                     {default} reduce       28     or_expr ::= and_expr

State 36:
          or_expr ::= or_expr * OR and_expr
     (33) expr ::= or_expr *

                            OR shift        4      
                     {default} reduce       33     expr ::= or_expr

State 37:
          term ::= IDENTIFIER * LPAREN RPAREN
          term ::= IDENTIFIER * LPAREN expr_list RPAREN
     (24) term ::= IDENTIFIER *

                        LPAREN shift        1      
                     {default} reduce       24     term ::= IDENTIFIER

State 38:
      (1) or_expr ::= or_expr OR and_expr *
          and_expr ::= and_expr * AND not_expr

                           AND shift        6      
                     {default} reduce       1      or_expr ::= or_expr OR and_expr

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: AND (precedence=2)
    2: OR (precedence=1)
    3: NOT (precedence=4)
    4: TRUE_LITERAL
    5: FALSE_LITERAL
    6: IDENTIFIER
    7: INTEGER_LITERAL
    8: STRING_LITERAL
    9: EQ (precedence=3)
   10: NE (precedence=3)
   11: LT (precedence=3)
   12: LE (precedence=3)
   13: GT (precedence=3)
   14: GE (precedence=3)
   15: CONTAINS (precedence=3)
   16: MATCHES (precedence=3)
   17: LPAREN
   18: RPAREN
   19: PLUS (precedence=5)
   20: MINUS (precedence=5)
   21: STAR (precedence=6)
   22: SLASH (precedence=6)
   23: MOD (precedence=6)
   24: COMMA
   25: filter_expr: NOT TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN MINUS
   26: or_expr: NOT TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN MINUS
   27: and_expr: NOT TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN MINUS
   28: not_expr: NOT TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN MINUS
   29: cmp_expr: TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN MINUS
   30: arithmetic: TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN MINUS
   31: unary: TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN MINUS
   32: expr: NOT TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN MINUS
   33: term: TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN
   34: expr_list: NOT TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN MINUS
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ AND OR NOT TRUE_LITERAL FALSE_LITERAL EQ NE LT LE GT GE CONTAINS MATCHES
LPAREN RPAREN PLUS MINUS STAR SLASH MOD COMMA filter_expr
----------------------------------------------------
Rules:
   0: filter_expr ::= or_expr.
   1: or_expr ::= or_expr OR and_expr. [OR precedence=1]
   2: and_expr ::= and_expr AND not_expr. [AND precedence=2]
   3: not_expr ::= NOT not_expr. [NOT precedence=4]
   4: cmp_expr ::= arithmetic EQ arithmetic. [EQ precedence=3]
   5: cmp_expr ::= arithmetic NE arithmetic. [NE precedence=3]
   6: cmp_expr ::= arithmetic LT arithmetic. [LT precedence=3]
   7: cmp_expr ::= arithmetic LE arithmetic. [LE precedence=3]
   8: cmp_expr ::= arithmetic GT arithmetic. [GT precedence=3]
   9: cmp_expr ::= arithmetic GE arithmetic. [GE precedence=3]
  10: cmp_expr ::= arithmetic CONTAINS arithmetic. [CONTAINS precedence=3]
  11: cmp_expr ::= arithmetic MATCHES arithmetic. [MATCHES precedence=3]
  12: arithmetic ::= arithmetic PLUS arithmetic. [PLUS precedence=5]
  13: arithmetic ::= arithmetic MINUS arithmetic. [MINUS precedence=5]
  14: arithmetic ::= arithmetic STAR arithmetic. [STAR precedence=6]
  15: arithmetic ::= arithmetic SLASH arithmetic. [SLASH precedence=6]
  16: arithmetic ::= arithmetic MOD arithmetic. [MOD precedence=6]
  17: unary ::= MINUS unary. [MINUS precedence=5]
  18: term ::= TRUE_LITERAL.
  19: term ::= FALSE_LITERAL.
  20: term ::= INTEGER_LITERAL.
  21: term ::= STRING_LITERAL.
  22: term ::= IDENTIFIER LPAREN RPAREN.
  23: term ::= IDENTIFIER LPAREN expr_list RPAREN.
  24: term ::= IDENTIFIER.
  25: term ::= LPAREN expr RPAREN.
  26: expr_list ::= expr.
  27: expr_list ::= expr_list COMMA expr.
  28: or_expr ::= and_expr.
  29: and_expr ::= not_expr.
  30: not_expr ::= cmp_expr.
  31: cmp_expr ::= arithmetic.
  32: arithmetic ::= unary.
  33: expr ::= or_expr.
  34: unary ::= term.
