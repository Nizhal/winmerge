State 0:
          where_clause ::= * expr
          expr ::= * expr OR expr
          expr ::= * expr AND expr
          expr ::= * NOT expr
          expr ::= * comparison
          expr ::= * LPAREN expr RPAREN
          comparison ::= * arithmetic EQ arithmetic
          comparison ::= * arithmetic NE arithmetic
          comparison ::= * arithmetic LT arithmetic
          comparison ::= * arithmetic LE arithmetic
          comparison ::= * arithmetic GT arithmetic
          comparison ::= * arithmetic GE arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                           NOT shift        2      
                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        1      
                  where_clause accept
                          expr shift        18     
                    comparison shift        18       /* because comparison==expr */
                    arithmetic shift        15     
                          term shift        15       /* because term==arithmetic */

State 1:
          expr ::= * expr OR expr
          expr ::= * expr AND expr
          expr ::= * NOT expr
          expr ::= * comparison
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          comparison ::= * arithmetic EQ arithmetic
          comparison ::= * arithmetic NE arithmetic
          comparison ::= * arithmetic LT arithmetic
          comparison ::= * arithmetic LE arithmetic
          comparison ::= * arithmetic GT arithmetic
          comparison ::= * arithmetic GE arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN
          term ::= LPAREN * arithmetic RPAREN

                           NOT shift        2      
                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        1      
                          expr shift        17     
                    comparison shift        17       /* because comparison==expr */
                    arithmetic shift        14     
                          term shift        14       /* because term==arithmetic */

State 2:
          expr ::= * expr OR expr
          expr ::= * expr AND expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * comparison
          expr ::= * LPAREN expr RPAREN
          comparison ::= * arithmetic EQ arithmetic
          comparison ::= * arithmetic NE arithmetic
          comparison ::= * arithmetic LT arithmetic
          comparison ::= * arithmetic LE arithmetic
          comparison ::= * arithmetic GT arithmetic
          comparison ::= * arithmetic GE arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                           NOT shift        2      
                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        1      
                          expr shift-reduce 3      expr ::= NOT expr
                    comparison shift-reduce 3      expr ::= NOT expr  /* because comparison==expr */
                    arithmetic shift        15     
                          term shift        15       /* because term==arithmetic */

State 3:
          expr ::= * expr OR expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * NOT expr
          expr ::= * comparison
          expr ::= * LPAREN expr RPAREN
          comparison ::= * arithmetic EQ arithmetic
          comparison ::= * arithmetic NE arithmetic
          comparison ::= * arithmetic LT arithmetic
          comparison ::= * arithmetic LE arithmetic
          comparison ::= * arithmetic GT arithmetic
          comparison ::= * arithmetic GE arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                           NOT shift        2      
                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        1      
                          expr shift-reduce 2      expr ::= expr AND expr
                    comparison shift-reduce 2      expr ::= expr AND expr  /* because comparison==expr */
                    arithmetic shift        15     
                          term shift        15       /* because term==arithmetic */

State 4:
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * expr AND expr
          expr ::= * NOT expr
          expr ::= * comparison
          expr ::= * LPAREN expr RPAREN
          comparison ::= * arithmetic EQ arithmetic
          comparison ::= * arithmetic NE arithmetic
          comparison ::= * arithmetic LT arithmetic
          comparison ::= * arithmetic LE arithmetic
          comparison ::= * arithmetic GT arithmetic
          comparison ::= * arithmetic GE arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                           NOT shift        2      
                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        1      
                          expr shift        25     
                    comparison shift        25       /* because comparison==expr */
                    arithmetic shift        15     
                          term shift        15       /* because term==arithmetic */

State 5:
          comparison ::= arithmetic GE * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        10     
                    arithmetic shift        19     
                          term shift        19       /* because term==arithmetic */

State 6:
          comparison ::= arithmetic GT * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        10     
                    arithmetic shift        20     
                          term shift        20       /* because term==arithmetic */

State 7:
          comparison ::= arithmetic LE * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        10     
                    arithmetic shift        21     
                          term shift        21       /* because term==arithmetic */

State 8:
          comparison ::= arithmetic LT * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        10     
                    arithmetic shift        22     
                          term shift        22       /* because term==arithmetic */

State 9:
          comparison ::= arithmetic NE * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        10     
                    arithmetic shift        23     
                          term shift        23       /* because term==arithmetic */

State 10:
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN
          term ::= LPAREN * arithmetic RPAREN

                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        10     
                    arithmetic shift        16     
                          term shift        16       /* because term==arithmetic */

State 11:
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= arithmetic MINUS * arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        10     
                    arithmetic shift-reduce 12     arithmetic ::= arithmetic MINUS arithmetic
                          term shift-reduce 12     arithmetic ::= arithmetic MINUS arithmetic  /* because term==arithmetic */

State 12:
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= arithmetic PLUS * arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        10     
                    arithmetic shift-reduce 11     arithmetic ::= arithmetic PLUS arithmetic
                          term shift-reduce 11     arithmetic ::= arithmetic PLUS arithmetic  /* because term==arithmetic */

State 13:
          comparison ::= arithmetic EQ * arithmetic
          arithmetic ::= * arithmetic PLUS arithmetic
          arithmetic ::= * arithmetic MINUS arithmetic
          arithmetic ::= * term
          term ::= * TRUE_LITERAL
          term ::= * FALSE_LITERAL
          term ::= * IDENTIFIER
          term ::= * INTEGER_LITERAL
          term ::= * STRING_LITERAL
          term ::= * LPAREN arithmetic RPAREN

                  TRUE_LITERAL shift-reduce 13     term ::= TRUE_LITERAL
                 FALSE_LITERAL shift-reduce 14     term ::= FALSE_LITERAL
                    IDENTIFIER shift-reduce 15     term ::= IDENTIFIER
               INTEGER_LITERAL shift-reduce 16     term ::= INTEGER_LITERAL
                STRING_LITERAL shift-reduce 17     term ::= STRING_LITERAL
                        LPAREN shift        10     
                    arithmetic shift        24     
                          term shift        24       /* because term==arithmetic */

State 14:
          comparison ::= arithmetic * EQ arithmetic
          comparison ::= arithmetic * NE arithmetic
          comparison ::= arithmetic * LT arithmetic
          comparison ::= arithmetic * LE arithmetic
          comparison ::= arithmetic * GT arithmetic
          comparison ::= arithmetic * GE arithmetic
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          term ::= LPAREN arithmetic * RPAREN

                            EQ shift        13     
                            NE shift        9      
                            LT shift        8      
                            LE shift        7      
                            GT shift        6      
                            GE shift        5      
                        RPAREN shift-reduce 18     term ::= LPAREN arithmetic RPAREN
                          PLUS shift        12     
                         MINUS shift        11     

State 15:
          comparison ::= arithmetic * EQ arithmetic
          comparison ::= arithmetic * NE arithmetic
          comparison ::= arithmetic * LT arithmetic
          comparison ::= arithmetic * LE arithmetic
          comparison ::= arithmetic * GT arithmetic
          comparison ::= arithmetic * GE arithmetic
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic

                            EQ shift        13     
                            NE shift        9      
                            LT shift        8      
                            LE shift        7      
                            GT shift        6      
                            GE shift        5      
                          PLUS shift        12     
                         MINUS shift        11     

State 16:
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic
          term ::= LPAREN arithmetic * RPAREN

                        RPAREN shift-reduce 18     term ::= LPAREN arithmetic RPAREN
                          PLUS shift        12     
                         MINUS shift        11     

State 17:
          expr ::= expr * OR expr
          expr ::= expr * AND expr
          expr ::= LPAREN expr * RPAREN

                           AND shift        3      
                            OR shift        4      
                        RPAREN shift-reduce 4      expr ::= LPAREN expr RPAREN

State 18:
      (0) where_clause ::= expr *
          expr ::= expr * OR expr
          expr ::= expr * AND expr

                             $ reduce       0      where_clause ::= expr
                           AND shift        3      
                            OR shift        4      

State 19:
     (10) comparison ::= arithmetic GE arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic

                          PLUS shift        12     
                         MINUS shift        11     
                     {default} reduce       10     comparison ::= arithmetic GE arithmetic

State 20:
      (9) comparison ::= arithmetic GT arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic

                          PLUS shift        12     
                         MINUS shift        11     
                     {default} reduce       9      comparison ::= arithmetic GT arithmetic

State 21:
      (8) comparison ::= arithmetic LE arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic

                          PLUS shift        12     
                         MINUS shift        11     
                     {default} reduce       8      comparison ::= arithmetic LE arithmetic

State 22:
      (7) comparison ::= arithmetic LT arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic

                          PLUS shift        12     
                         MINUS shift        11     
                     {default} reduce       7      comparison ::= arithmetic LT arithmetic

State 23:
      (6) comparison ::= arithmetic NE arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic

                          PLUS shift        12     
                         MINUS shift        11     
                     {default} reduce       6      comparison ::= arithmetic NE arithmetic

State 24:
      (5) comparison ::= arithmetic EQ arithmetic *
          arithmetic ::= arithmetic * PLUS arithmetic
          arithmetic ::= arithmetic * MINUS arithmetic

                          PLUS shift        12     
                         MINUS shift        11     
                     {default} reduce       5      comparison ::= arithmetic EQ arithmetic

State 25:
          expr ::= expr * OR expr
      (1) expr ::= expr OR expr *
          expr ::= expr * AND expr

                           AND shift        3      
                     {default} reduce       1      expr ::= expr OR expr

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: AND (precedence=2)
    2: OR (precedence=1)
    3: NOT (precedence=4)
    4: TRUE_LITERAL
    5: FALSE_LITERAL
    6: IDENTIFIER
    7: INTEGER_LITERAL
    8: STRING_LITERAL
    9: EQ (precedence=3)
   10: NE (precedence=3)
   11: LT (precedence=3)
   12: LE (precedence=3)
   13: GT (precedence=3)
   14: GE (precedence=3)
   15: LPAREN
   16: RPAREN
   17: PLUS (precedence=5)
   18: MINUS (precedence=5)
   19: where_clause: NOT TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN
   20: expr: NOT TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN
   21: comparison: TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN
   22: arithmetic: TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN
   23: term: TRUE_LITERAL FALSE_LITERAL IDENTIFIER INTEGER_LITERAL STRING_LITERAL LPAREN
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ AND OR NOT TRUE_LITERAL FALSE_LITERAL EQ NE LT LE GT GE LPAREN RPAREN PLUS
MINUS where_clause
----------------------------------------------------
Rules:
   0: where_clause ::= expr.
   1: expr ::= expr OR expr. [OR precedence=1]
   2: expr ::= expr AND expr. [AND precedence=2]
   3: expr ::= NOT expr. [NOT precedence=4]
   4: expr ::= LPAREN expr RPAREN.
   5: comparison ::= arithmetic EQ arithmetic. [EQ precedence=3]
   6: comparison ::= arithmetic NE arithmetic. [NE precedence=3]
   7: comparison ::= arithmetic LT arithmetic. [LT precedence=3]
   8: comparison ::= arithmetic LE arithmetic. [LE precedence=3]
   9: comparison ::= arithmetic GT arithmetic. [GT precedence=3]
  10: comparison ::= arithmetic GE arithmetic. [GE precedence=3]
  11: arithmetic ::= arithmetic PLUS arithmetic. [PLUS precedence=5]
  12: arithmetic ::= arithmetic MINUS arithmetic. [MINUS precedence=5]
  13: term ::= TRUE_LITERAL.
  14: term ::= FALSE_LITERAL.
  15: term ::= IDENTIFIER.
  16: term ::= INTEGER_LITERAL.
  17: term ::= STRING_LITERAL.
  18: term ::= LPAREN arithmetic RPAREN.
  19: expr ::= comparison.
  20: arithmetic ::= term.
