/* Generated by re2c 3.1 on Tue May 27 09:09:25 2025 */
#line 1 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
#line 6 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"


#include "pch.h"
#include "FilterParser.h"
#include "FilterLexer.h"
#include <string>

int FilterLexer::yylex()
{
begin:
	
#line 16 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
{
	char yych;
	unsigned int yyaccept = 0;
	yych = *YYCURSOR;
	switch (yych) {
		case '\t':
		case '\n':
		case '\r':
		case ' ': goto yy3;
		case '!': goto yy5;
		case '"': goto yy6;
		case '%': goto yy7;
		case '(': goto yy8;
		case ')': goto yy9;
		case '*': goto yy10;
		case '+': goto yy11;
		case '-': goto yy12;
		case '/': goto yy13;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy14;
		case '<': goto yy16;
		case '=': goto yy18;
		case '>': goto yy20;
		case 'A':
		case 'a': goto yy22;
		case 'B':
		case 'E':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'U':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'b':
		case 'e':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 'u':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy24;
		case 'C':
		case 'c': goto yy26;
		case 'D':
		case 'd': goto yy27;
		case 'F':
		case 'f': goto yy28;
		case 'M':
		case 'm': goto yy29;
		case 'N':
		case 'n': goto yy30;
		case 'O':
		case 'o': goto yy31;
		case 'T':
		case 't': goto yy32;
		case 'V':
		case 'v': goto yy33;
		default:
			if (YYLIMIT <= YYCURSOR) goto yy104;
			goto yy1;
	}
yy1:
	++YYCURSOR;
yy2:
#line 89 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return LEXER_ERR_UNKNOWN_CHAR; }
#line 110 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy3:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\t':
		case '\n':
		case '\r':
		case ' ': goto yy3;
		default: goto yy4;
	}
yy4:
#line 17 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ goto begin; }
#line 123 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy5:
	yych = *++YYCURSOR;
	switch (yych) {
		case '=': goto yy34;
		default: goto yy2;
	}
yy6:
	++YYCURSOR;
#line 67 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{
		std::string str = unescapeQuotes(YYCURSOR);
		if (*(YYCURSOR - 1) != '"')
			return LEXER_ERR_UNTERMINATED_STRING;
		yylval.string = dupString(str.c_str());
		return STRING_LITERAL;
	}
#line 140 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy7:
	++YYCURSOR;
#line 87 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return MOD; }
#line 145 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy8:
	++YYCURSOR;
#line 81 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return LPAREN; }
#line 150 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy9:
	++YYCURSOR;
#line 82 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return RPAREN; }
#line 155 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy10:
	++YYCURSOR;
#line 85 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return STAR; }
#line 160 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy11:
	++YYCURSOR;
#line 83 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return PLUS; }
#line 165 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy12:
	++YYCURSOR;
#line 84 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return MINUS; }
#line 170 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy13:
	++YYCURSOR;
#line 86 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return SLASH; }
#line 175 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy14:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy14;
		case 'D':
		case 'd': goto yy35;
		case 'G':
		case 'K':
		case 'T':
		case 'g':
		case 'k':
		case 't': goto yy37;
		case 'H':
		case 'h': goto yy39;
		case 'M':
		case 'm': goto yy40;
		case 'S':
		case 's': goto yy41;
		case 'W':
		case 'w': goto yy42;
		default: goto yy15;
	}
yy15:
#line 55 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{
		yylval.integer = std::stoi(std::string((const char*)yycursor, YYCURSOR - yycursor));
		return INTEGER_LITERAL;
	}
#line 214 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy16:
	yych = *++YYCURSOR;
	switch (yych) {
		case '=': goto yy43;
		default: goto yy17;
	}
yy17:
#line 77 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return LT; }
#line 224 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy18:
	yych = *++YYCURSOR;
	switch (yych) {
		case '=': goto yy44;
		default: goto yy19;
	}
yy19:
#line 75 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return EQ; }
#line 234 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy20:
	yych = *++YYCURSOR;
	switch (yych) {
		case '=': goto yy45;
		default: goto yy21;
	}
yy21:
#line 79 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return GT; }
#line 244 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy22:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'N':
		case 'n': goto yy46;
		default: goto yy25;
	}
yy23:
#line 59 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{
		const char* p = yycursor;
		while (*p == ' ' || *p == '\t' || *p == '\r' || *p == '\n')
			p++;
		std::string tmp = std::string(p, YYCURSOR - p);
		yylval.string = dupString(tmp.c_str());
		return IDENTIFIER;
	}
#line 263 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy24:
	yych = *++YYCURSOR;
yy25:
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy24;
		default: goto yy23;
	}
yy26:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'O':
		case 'o': goto yy47;
		default: goto yy25;
	}
yy27:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case '"': goto yy48;
		default: goto yy25;
	}
yy28:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'A':
		case 'a': goto yy49;
		default: goto yy25;
	}
yy29:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'A':
		case 'a': goto yy50;
		default: goto yy25;
	}
yy30:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'O':
		case 'o': goto yy51;
		default: goto yy25;
	}
yy31:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'R':
		case 'r': goto yy52;
		default: goto yy25;
	}
yy32:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'R':
		case 'r': goto yy54;
		default: goto yy25;
	}
yy33:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case '"': goto yy55;
		default: goto yy25;
	}
yy34:
	++YYCURSOR;
#line 76 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return NE; }
#line 399 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy35:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case 'A':
		case 'a': goto yy56;
		default: goto yy36;
	}
yy36:
#line 33 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{
		const char* p = yycursor;
		while (*p == ' ' || *p == '\t' || *p == '\r' || *p == '\n')
			p++;
		std::string lit(p, YYCURSOR - p);
		yylval.string = dupString(lit.c_str());
		return DURATION_LITERAL;
	}
#line 418 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy37:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'B':
		case 'b': goto yy57;
		default: goto yy38;
	}
yy38:
	YYCURSOR = YYMARKER;
	if (yyaccept == 0) {
		goto yy15;
	} else {
		goto yy36;
	}
yy39:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case 'O':
		case 'o': goto yy58;
		case 'R':
		case 'r': goto yy59;
		default: goto yy36;
	}
yy40:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case 'B':
		case 'b': goto yy57;
		case 'I':
		case 'i': goto yy60;
		case 'S':
		case 's': goto yy61;
		default: goto yy36;
	}
yy41:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case 'E':
		case 'e': goto yy62;
		default: goto yy36;
	}
yy42:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case 'E':
		case 'e': goto yy63;
		default: goto yy36;
	}
yy43:
	++YYCURSOR;
#line 78 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return LE; }
#line 475 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy44:
	++YYCURSOR;
#line 74 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return EQ; }
#line 480 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy45:
	++YYCURSOR;
#line 80 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return GE; }
#line 485 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy46:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'D':
		case 'd': goto yy64;
		default: goto yy25;
	}
yy47:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'N':
		case 'n': goto yy66;
		default: goto yy25;
	}
yy48:
	++YYCURSOR;
#line 41 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{
		std::string str = unescapeQuotes(YYCURSOR);
		if (*(YYCURSOR - 1) != '"')
			return LEXER_ERR_UNTERMINATED_STRING;
		yylval.string = dupString(str.c_str());
		return DATETIME_LITERAL;
	}
#line 512 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy49:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'L':
		case 'l': goto yy67;
		default: goto yy25;
	}
yy50:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'T':
		case 't': goto yy68;
		default: goto yy25;
	}
yy51:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'T':
		case 't': goto yy69;
		default: goto yy25;
	}
yy52:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy24;
		default: goto yy53;
	}
yy53:
#line 19 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return OR; }
#line 608 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy54:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'U':
		case 'u': goto yy71;
		default: goto yy25;
	}
yy55:
	++YYCURSOR;
#line 48 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{
		std::string str = unescapeQuotes(YYCURSOR);
		if (*(YYCURSOR - 1) != '"')
			return LEXER_ERR_UNTERMINATED_STRING;
		yylval.string = dupString(str.c_str());
		return VERSION_LITERAL;
	}
#line 627 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy56:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'Y':
		case 'y': goto yy72;
		default: goto yy38;
	}
yy57:
	++YYCURSOR;
#line 25 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{
		const char* p = yycursor;
		while (*p == ' ' || *p == '\t' || *p == '\r' || *p == '\n')
			p++;
		std::string lit(p, YYCURSOR - p);
		yylval.string = dupString(lit.c_str());
		return SIZE_LITERAL;
	}
#line 646 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy58:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'U':
		case 'u': goto yy73;
		default: goto yy38;
	}
yy59:
	++YYCURSOR;
	goto yy36;
yy60:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'L':
		case 'l': goto yy74;
		case 'N':
		case 'n': goto yy75;
		default: goto yy38;
	}
yy61:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case 'E':
		case 'e': goto yy76;
		default: goto yy36;
	}
yy62:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'C':
		case 'c': goto yy77;
		default: goto yy38;
	}
yy63:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'E':
		case 'e': goto yy78;
		default: goto yy38;
	}
yy64:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy24;
		default: goto yy65;
	}
yy65:
#line 18 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return AND; }
#line 759 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy66:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'T':
		case 't': goto yy79;
		default: goto yy25;
	}
yy67:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'S':
		case 's': goto yy80;
		default: goto yy25;
	}
yy68:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'C':
		case 'c': goto yy81;
		default: goto yy25;
	}
yy69:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy24;
		default: goto yy70;
	}
yy70:
#line 20 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return NOT; }
#line 855 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy71:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'E':
		case 'e': goto yy82;
		default: goto yy25;
	}
yy72:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'S':
		case 's': goto yy59;
		default: goto yy36;
	}
yy73:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'R':
		case 'r': goto yy72;
		default: goto yy38;
	}
yy74:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'L':
		case 'l': goto yy84;
		default: goto yy38;
	}
yy75:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case 'U':
		case 'u': goto yy85;
		default: goto yy36;
	}
yy76:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'C':
		case 'c': goto yy59;
		default: goto yy38;
	}
yy77:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case 'O':
		case 'o': goto yy86;
		default: goto yy36;
	}
yy78:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'K':
		case 'k': goto yy72;
		default: goto yy38;
	}
yy79:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'A':
		case 'a': goto yy87;
		default: goto yy25;
	}
yy80:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'E':
		case 'e': goto yy88;
		default: goto yy25;
	}
yy81:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'H':
		case 'h': goto yy90;
		default: goto yy25;
	}
yy82:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy24;
		default: goto yy83;
	}
yy83:
#line 21 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ yylval.boolean = true; return TRUE_LITERAL; }
#line 1010 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy84:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'I':
		case 'i': goto yy91;
		default: goto yy38;
	}
yy85:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'T':
		case 't': goto yy92;
		default: goto yy38;
	}
yy86:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'N':
		case 'n': goto yy93;
		default: goto yy38;
	}
yy87:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'I':
		case 'i': goto yy94;
		default: goto yy25;
	}
yy88:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy24;
		default: goto yy89;
	}
yy89:
#line 22 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ yylval.boolean = false; return FALSE_LITERAL; }
#line 1111 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy90:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'E':
		case 'e': goto yy95;
		default: goto yy25;
	}
yy91:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'S':
		case 's': goto yy96;
		default: goto yy38;
	}
yy92:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'E':
		case 'e': goto yy72;
		default: goto yy38;
	}
yy93:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'D':
		case 'd': goto yy72;
		default: goto yy38;
	}
yy94:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'N':
		case 'n': goto yy97;
		default: goto yy25;
	}
yy95:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'S':
		case 's': goto yy98;
		default: goto yy25;
	}
yy96:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'E':
		case 'e': goto yy100;
		default: goto yy38;
	}
yy97:
	yych = *++YYCURSOR;
	switch (yych) {
		case 0x00: goto yy23;
		case 'S':
		case 's': goto yy101;
		default: goto yy25;
	}
yy98:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy24;
		default: goto yy99;
	}
yy99:
#line 24 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return MATCHES; }
#line 1243 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy100:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'C':
		case 'c': goto yy103;
		default: goto yy38;
	}
yy101:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy24;
		default: goto yy102;
	}
yy102:
#line 23 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return CONTAINS; }
#line 1322 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
yy103:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'O':
		case 'o': goto yy86;
		default: goto yy38;
	}
yy104:
#line 88 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"
	{ return 0; }
#line 1333 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.cpp"
}
#line 90 "E:\\dev\\winmerge\\Src\\FilterEngine\\FilterLexer.re"

}

std::string FilterLexer::unescapeQuotes(char*& str)
{
	std::string result;
	const char* start = str;
	while (*str != '\0')
	{
		if (*str == '"')
		{
			if (*(str + 1) == '"')
			{
				result += '"';
				str += 2;
			}
			else
			{
				str++;
				break;
			}
		}
		else
		{
			result += *str++;
		}
	}
	return result;
}

const char* FilterLexer::dupString(const char* str)
{
	char* newStr = _strdup(str);
	strings.push_back(newStr);
	return newStr;
}

void FilterLexer::freeStrings()
{
	for (auto str : strings)
		free(str);
	strings.clear();
}

